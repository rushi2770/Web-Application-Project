@model MVC.Models.userLoginDetails

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Account/_Layout.cshtml";
}


@* To Stop Client side validations of Login username. if this code is not present then it's throwing an error
    stating username already exists i.e is because of remote validation *@
@{
    Html.EnableClientValidation(false);
    Html.EnableUnobtrusiveJavaScript(false);
}



<body>
    <h2>Login Page</h2>
    @section UserNav{
        <nav class="navbar navbar-inverse">
            <div class="container-fluid">
                @*<div class="navbar-header">
                        <a class="navbar-brand" href="@Url.Action("Index","Home")">DataQuad</a>
                    </div>*@
                <ul class="nav navbar-nav">
                    <li><a href="@Url.Action("Index","Home")">Home</a></li>
                    <li><a href="@Url.Action("AboutUs", "Home")">About Us</a></li>
                    <li><a href="@Url.Action("Services", "Home")">Services</a></li>
                    <li><a href="@Url.Action("Industries", "Home")">Industries</a></li>
                    <li><a href="@Url.Action("Careers", "Home")">Careers</a></li>
                    <li><a href="@Url.Action("ContactUs", "Home")">ContactUs</a></li>
                </ul>
                <ul class="nav navbar-nav navbar-right">

                    <li><a href="@Url.Action("Index", "Register")"><span class="glyphicon glyphicon-user"></span> Sign Up</a></li>
                    @*  <li><a href="@Url.Action("Index", "Account")"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>*@
                </ul>
            </div>
        </nav>
    }
@using (Html.BeginForm("Index", "Account", FormMethod.Post))
{
    @Html.HiddenFor(model => model.userId)
    <div class="row col-md-offset-4 col-md-4">
        <div class="input-group">
            <span class="input-group-addon "><i class="glyphicon glyphicon-user"></i></span>
            @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control", placeholder = "User Name" } })
        </div>

        <div>
            <label style="color:red">@Html.ValidationMessageFor(model => model.userName)</label>
        </div>
    </div>
    <div class="row col-md-offset-4 col-md-4">
        <div class="input-group">
            <span class="input-group-addon "><i class="glyphicon glyphicon-lock"></i></span>
            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
        </div>
        <div>
            <label style="color:red">@Html.ValidationMessageFor(model => model.password)</label><br />
            <div><label class="field-validation-error" style="color:red">@Html.DisplayFor(model => model.ErrorMessage)</label></div>
        </div>
    </div>


    <div class="row col-md-offset-4 col-md-4">
        <span class="col-md-6">New user? @Html.ActionLink("Sign Up", "Index", "Register")</span>
        <input class="btn btn-default col-md-offset-4 col-md-2" type="submit" value="Login" name="Login" />
    </div>

}

</body>
